How React Comes into picture ---> 


Facebook has a problem earlier i.e Ghost Notifications..

It's showing notifications number After notifications seen by user also..like icon of 500 etc...

It's not rerendering whenever notifications seen by user..

To solve this they brought up react which automatically re renders the particular element of dom which got changed..

React is so faster because -->


	In react we have virtual dom and real dom.. 

	Ex- we have header,main,footer tags in home.js page
	
	    we have header,main,section,footer in docs.js

	    So here when we move to docs.js react doesn't re render everything.. virtual dom compares elements of react dom which is changed

	    And renders that particular component only... 


Vite:
	
	create-react-app is a bulk so one can use vite a frontend tool that is used for building fast and optimized web applications


Svelte 


	Svelte is a radical new approach to building user interfaces. Whereas traditional frameworks like React and Vue do the bulk of their work in the 	browser, Svelte shifts that work into a compile step that happens when you build your app.

	Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.



Call by value (Primitives--> string,number,bool)


	Sends copy of an object not original one..

	So it doesn't modifies original obj


Call by reference (Non primitives--> arr,obj)

	It gets ref of original obj..So modified in original one only.. Not in case of functions



Ex--
	function Counter() {
  const [count, setCount] = useState(0);
  return (
    <div>
      <button onClick={(e) => setCount(count + 1)}>Count: {count}</button>
    </div>
  );
}

export default function App() {
  return (
    <div style={{}}>
      <Counter />
      <Counter />
      <Counter />
    </div>
  );


Everytime we call counter each counter component it will give new copy of count.. If we click first count button the value on first counter only changes.. If we click second counter then the value on second counter will only changes...

It doesn't share the same state to maintain global state management we use `Redux`
